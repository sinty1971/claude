package models

// KoujiEntry represents a construction kouji folder with additional metadata
// @Description Construction kouji folder information with extended attributes
type KoujiEntry struct {
	// Additional fields specific to Kouji folders
	Id           string    `json:"id,omitempty" yaml:"id" example:"Generated by Folder ID + CompanyName + LocationName"`
	CompanyName  string    `json:"company_name,omitempty" yaml:"company_name" example:"豊田築炉"`
	LocationName string    `json:"location_name,omitempty" yaml:"location_name" example:"名和工場"`
	Status       string    `json:"status,omitempty" yaml:"status" example:"進行中"`
	StartDate    Timestamp `json:"start_date,omitempty" yaml:"start_date"`
	EndDate      Timestamp `json:"end_date,omitempty" yaml:"end_date"`
	Description  string    `json:"description,omitempty" yaml:"description" example:"工事関連の資料とドキュメント"`
	Tags         []string  `json:"tags,omitempty" yaml:"tags" example:"['工事', '豊田築炉', '名和工場']"`
	// Embed the base FileEntry struct
	FileEntry
}

// KoujiEntriesResponse represents the response for listing kouji entries
// @Description Response containing list of construction kouji folders
type KoujiEntriesResponse struct {
	KoujiEntries []KoujiEntry `json:"kouji_entries" description:"List of kouji entries"`
	Count        int          `json:"count" example:"10" description:"Total number of entries returned"`
	TotalSize    int64        `json:"total_size,omitempty" example:"1073741824" description:"Total size of all files in bytes"`
}

// UpdateKoujiEntryDatesRequest represents the request body for updating kouji dates
// @Description Request body for updating kouji start and end dates
type UpdateKoujiEntryDatesRequest struct {
	StartDate string `json:"start_date" example:"2024-01-01T00:00:00Z"`
	EndDate   string `json:"end_date" example:"2024-12-31T00:00:00Z"`
}
