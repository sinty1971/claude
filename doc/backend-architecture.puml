@startuml Backend Architecture - Penguin Project
!theme plain
title Backend Architecture - Penguin Project

skinparam backgroundColor #FEFEFE
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype ortho

skinparam class {
    BackgroundColor #F8F9FA
    BorderColor #E1E4E8
    FontColor #24292E
}

skinparam component {
    BackgroundColor #DBEAFE
    BorderColor #3B82F6
    FontColor #1E3A8A
}

skinparam database {
    BackgroundColor #FEF3C7
    BorderColor #F59E0B
    FontColor #78350F
}

skinparam note {
    BackgroundColor #F0F7FF
    BorderColor #0366D6
}

package "HTTP Layer" #FFE4E6 {
    component "HTTP Client/Frontend" as Client #FFC0CB
}

package "Handler Layer\n(internal/handlers)" #E0E7FF {
    class FolderHandler {
        - service: FolderService
        --
        + GetFolders(c *fiber.Ctx)
        + GetKoujiProjects(c *fiber.Ctx)
        + SaveKoujiProjectsToYAML(c *fiber.Ctx)
        + UpdateKoujiProjectDates(c *fiber.Ctx)
        + CleanupInvalidTimeData(c *fiber.Ctx)
    }
}

package "Service Layer\n(internal/services)" #DCFCE7 {
    class FolderService {
        --
        + GetFolders(path string) ([]Folder, error)
        + LoadKoujiProjectsFromYAML(path string) ([]KoujiProject, error)
        + SaveKoujiProjectsToYAML(path string, projects []KoujiProject) error
        + CleanupInvalidTimeData(path string) error
        --
        - expandHomeDir(path string) string
        - isValidTime(t time.Time) bool
    }
}

package "Model Layer\n(internal/models)" #FEF9C3 {
    class Folder {
        + Name: string
        + Path: string
        + Size: int64
        + IsDirectory: bool
        + ModTime: time.Time
        + CreatedDate: *time.Time
    }
    
    class KoujiProject {
        <<embed Folder>>
        + ProjectID: string
        + CompanyName: string
        + LocationName: string
        + StartDate: *time.Time
        + EndDate: *time.Time
        + Status: string
        + IsKoujiProject: bool
    }
    
    class FolderListResponse {
        + Files: []Folder
    }
    
    class KoujiProjectListResponse {
        + Files: []KoujiProject
    }
    
    KoujiProject --|> Folder : embeds
}

package "Data Storage" #FFF7ED {
    database "File System\n~/penguin/" as FileSystem #FEF3C7
    database ".inside.yaml" as YAMLFile #FEF3C7
}

' Relations
Client --> FolderHandler : HTTP Request

FolderHandler --> FolderService : calls

FolderService --> FileSystem : reads
FolderService --> YAMLFile : read/write

FolderService ..> Folder : uses
FolderService ..> KoujiProject : uses
FolderHandler ..> FolderListResponse : returns
FolderHandler ..> KoujiProjectListResponse : returns

note right of FolderHandler
  HTTPリクエスト/レスポンスの処理
  バリデーション
  Service層の呼び出し
  ビジネスロジック
end note

note right of FolderService
  ファイルシステムアクセス
  YAMLファイル処理
  パスの展開
  時刻データの検証
end note

note bottom of KoujiProject
  プロジェクトID: BLAKE2bハッシュ (5文字)
  フォルダ命名規則: YYYY-MMDD 会社名 現場名
  タイムゾーン: JST（ローカルタイム）
end note

@enduml